// START
@256
D=A
@SP
M=D
// call Sys.init
@Sys.init$RETURN.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@SP
MD=M+1
@ARG
M=D
@0
D=A
@ARG
M=M-D
@5
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$RETURN.0)
//['function', 'Main.fibonacci', '0']
(Main.fibonacci)
@0
D=A
(Main.fibonacci$LOCALZEROLOOP.1)
@Main.fibonacci$LOCALZEROLOOPEND.1
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Main.fibonacci$LOCALZEROLOOP.1
0;JMP
(Main.fibonacci$LOCALZEROLOOPEND.1)
//['push', 'argument', '0']
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//['push', 'constant', '2']
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//['lt']
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@lttrue1
D;JLT
@ltfalse1
0;JMP
(lttrue1)
@SP
A=M
M=-1
@ENDlt1
0;JMP
(ltfalse1)
@SP
A=M
M=0
(ENDlt1)
@SP
M=M+1
//['if-goto', 'N_LT_2']
@SP
AM=M-1
D=M
@N_LT_2   
D;JNE
//['goto', 'N_GE_2']
@N_GE_2
0;JMP
//['label', 'N_LT_2']
(N_LT_2)
//['push', 'argument', '0']
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//['return']
@LCL
D=M
@$ENDFRAME
M=D
@5
D=D-A
A=D
D=M
@$RETADDR
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@$ENDFRAME
D=M-1
A=D
D=M
@THAT
M=D
@$ENDFRAME
D=M-1
D=D-1
A=D
D=M
@THIS
M=D
@$ENDFRAME
D=M-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@$ENDFRAME
D=M-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@$RETADDR
A=M
0;JMP
//['label', 'N_GE_2']
(N_GE_2)
//['push', 'argument', '0']
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//['push', 'constant', '2']
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//['sub']
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
//['call', 'Main.fibonacci', '1']
@Main.fibonacci$RETURN.1
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@SP
MD=M+1
@ARG
M=D
@1
D=A
@ARG
M=M-D
@5
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$RETURN.1)
//['push', 'argument', '0']
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//['push', 'constant', '1']
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//['sub']
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
//['call', 'Main.fibonacci', '1']
@Main.fibonacci$RETURN.2
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@SP
MD=M+1
@ARG
M=D
@1
D=A
@ARG
M=M-D
@5
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$RETURN.2)
//['add']
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
//['return']
@LCL
D=M
@$ENDFRAME
M=D
@5
D=D-A
A=D
D=M
@$RETADDR
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@$ENDFRAME
D=M-1
A=D
D=M
@THAT
M=D
@$ENDFRAME
D=M-1
D=D-1
A=D
D=M
@THIS
M=D
@$ENDFRAME
D=M-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@$ENDFRAME
D=M-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@$RETADDR
A=M
0;JMP
//['function', 'Sys.init', '0']
(Sys.init)
@0
D=A
(Sys.init$LOCALZEROLOOP.2)
@Sys.init$LOCALZEROLOOPEND.2
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.init$LOCALZEROLOOP.2
0;JMP
(Sys.init$LOCALZEROLOOPEND.2)
//['push', 'constant', '4']
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//['call', 'Main.fibonacci', '1']
@Main.fibonacci$RETURN.3
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@SP
MD=M+1
@ARG
M=D
@1
D=A
@ARG
M=M-D
@5
D=A
@ARG
M=M-D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$RETURN.3)
//['label', 'END']
(END)
//['goto', 'END']
@END
0;JMP
// END
@endofprogram
(endofprogram)
0;JMP
