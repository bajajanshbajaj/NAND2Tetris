function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label classMainwhileLabelStart0
push local 2
not
if-goto classMainwhileLabelEXIT0
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto classMainifLabelExecuteIf0
goto classMainifLabelExecuteElse0
label classMainifLabelExecuteIf0
push argument 0
push local 0
and
push constant 0
eq
not
if-goto classMainifLabelExecuteIf1
goto classMainifLabelExecuteElse1
label classMainifLabelExecuteIf1
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto classMainifLabelEND1
label classMainifLabelExecuteElse1
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label classMainifLabelEND1
goto classMainifLabelEND0
label classMainifLabelExecuteElse0
push constant 0
pop local 2
label classMainifLabelEND0
goto classMainwhileLabelStart0
label classMainwhileLabelEXIT0
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto classMainifLabelExecuteIf0
goto classMainifLabelExecuteElse0
label classMainifLabelExecuteIf0
push constant 1
return
goto classMainifLabelEND0
label classMainifLabelExecuteElse0
push argument 0
push constant 2
call Math.multiply 2
return
label classMainifLabelEND0
function Main.fillMemory 0
label classMainwhileLabelStart0
push argument 1
push constant 0
gt
not
if-goto classMainwhileLabelEXIT0
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto classMainwhileLabelStart0
label classMainwhileLabelEXIT0
push constant 0
return
